TOPICS                            IMPORTANCE                                    STATUS                 

1.  DBMS                              HIGH                                     IN PROGRESS..
2.  OOM                               HIGH
3.  OS                                MEDIUM
4.  DATA STRUCTURES                   HIGH                                     C0MPLETED     
5.  SOFTWARE MODELS                   MEDIUM 
6.  COMPUTER ARHITECTURE              MEDIUM
7.  NETWORKS                          HIGH
8.  ARTIFICAL INTELLIGENCE            MEDIUM
9.  DESIGN ALGORITHMS                 HIGH                                     COMPLETED
10. Distributed Systems               HIGH

-----------------------------------------
1. PROJECTS AND GITHUB
2. PRE-PREPARED ANSWERS
-----------------------------------------

1. DataBase Management System:  
  (a) Functional Dependecies and Keys:
              i.    a->b; if we have a we can search b. a=determinant; b=dependent; 
              ii.   trivial;(have no use b subset of a) and non-trivial;(useful, b is not subset of a) Dependecies;
              iii.  closure set of attributes: if closure contains all elements then it will be candidate key;
                    equivalence relation
              iv.   canonical form: if your presence doesn't change system the u are redundant;
              v.    primary key is selected by user from pool of candidate keys;
              vi.   foreign key: it is an attribute or set of attributes that ref, to primary key of same or 
                    another table;
                    a table can have multiple foreign keys
                    concept of foreign key:-> referntial integrity: amazon-flipkart example with Ram college counter eg.
                    if we delete some data entry from base table this may cause voilation : 
                      ondeletecascade-> automatically delete from all refrencing table (most important)
                      ondeletesetNULL-> automatically put NULL at FK     
                    if we update some entry in base table then voilation may occur but we apply same ways to get rid of.   
  (b) Normalisation:
              i.    technique to organize data into multiple tables, to minimize the data redundancy;
              ii.   Redundant data produce anomalies in insertion, updation and deletion;
              iii.  types are : 1NF,2NF,3NF,BCNF,4NF,5NF
              iv.   1nf -> Data Atomicity;
              v.    2NF -> Do not have any partial dependencies;
              vi.   3Nf -> Do not have any transitive dependency;
              vii.  BCNF -> if a->b then a must be a super key; nonprime->prime not allowed;
  (c) Indexing:
              i.   file is stored in blocks;
              ii.  blocks may be sorted or maynot be;
              iii. make a additional table stores index and block pointers;
              iv.  types of indexing: primary -> used when file is sorted and selected attr. is primary key;
                          ,cluster -> used when file is sorted and selected attr. is not  primary key
                          ,secondary -> non sorted file data; but index is sorted 
                          ,multilevel indexing -> using b+ trees;
  (d) Query Optimisation: 
              i.   A set of equivalence rules is said to be minimal if no rule can be derived from any 
                   combination of the others. A query is said to be optimal when it is minimal.
              ii.  Do selection process as early as possible as it reduces search space for joins "EARLY SELECTION !!"
  (e) Transactions:
              i.  ACID PR
